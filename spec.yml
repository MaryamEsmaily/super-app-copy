openapi: 3.0.2
info:
  title: 'Swagger API Doc'
  version: 1.0.0
servers:
  - { url: 'http://http://localhost:500/api/' }
paths:
  api/v1/auth/login:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties:
                            { mobile: { type: string, nullable: false }, password: { type: string, nullable: false } },
                          required: [mobile, password],
                        },
                    },
                },
            },
          tags: [Super-App],
          summary: '',
          description: '',
          responses:
            {
              200:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              type: object,
                              nullable: false,
                              properties:
                                {
                                  status_code: { type: integer, nullable: false },
                                  data:
                                    {
                                      type: object,
                                      nullable: false,
                                      properties:
                                        {
                                          access_token: { type: string, nullable: false },
                                          refresh_token: { type: string, nullable: true },
                                        },
                                    },
                                },
                            },
                        },
                    },
                  description: '',
                },
            },
        },
    }
  api/v1/auth/send-otp:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties: { mobile: { type: string, nullable: false } },
                          required: [mobile],
                        },
                    },
                },
            },
          tags: [Super-App],
          summary: '',
          description: '',
          responses:
            {
              200:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              type: object,
                              nullable: false,
                              properties:
                                {
                                  status_code: { type: integer, nullable: false },
                                  data:
                                    {
                                      type: object,
                                      nullable: false,
                                      properties: { ttl: { type: integer, nullable: false } },
                                    },
                                },
                            },
                        },
                    },
                  description: '',
                },
              422:
                {
                  content: { application/json: { schema: { type: object, nullable: false, properties: {} } } },
                  description: '',
                },
            },
        },
    }
  api/v1/auth/verify-otp:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties:
                            { mobile: { type: string, nullable: false }, code: { type: string, nullable: false } },
                          required: [mobile, code],
                        },
                    },
                },
            },
          tags: [Super-App],
          summary: '',
          description: '',
          responses:
            {
              200:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              type: object,
                              nullable: false,
                              properties:
                                {
                                  status_code: { type: integer, nullable: false },
                                  data:
                                    {
                                      type: object,
                                      nullable: false,
                                      properties:
                                        {
                                          access_token: { type: string, nullable: false },
                                          refresh_token: { type: string, nullable: true },
                                        },
                                    },
                                },
                            },
                        },
                    },
                  description: '',
                },
              401:
                {
                  content: { application/json: { schema: { type: object, nullable: false, properties: {} } } },
                  description: '',
                },
              422:
                {
                  content: { application/json: { schema: { type: object, nullable: false, properties: {} } } },
                  description: '',
                },
            },
        },
    }
  /api/internal/api/shipment/parcel:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties:
                            {
                              reference_shipment_id: { type: integer, nullable: false },
                              consignor_id: { type: integer, nullable: false },
                              parcel_reference_code: { type: string, nullable: false },
                              parcel_shipping_code: { type: string, nullable: false },
                              parcel_information:
                                {
                                  type: object,
                                  nullable: false,
                                  properties:
                                    {
                                      weight: { type: integer, nullable: false },
                                      value: { type: integer, nullable: false },
                                      payable_price: { type: integer, nullable: false },
                                      is_critical: { type: boolean, nullable: false },
                                      is_fragile: { type: boolean, nullable: false },
                                      is_liquid: { type: boolean, nullable: false },
                                      description: { type: string, nullable: true },
                                      dimension:
                                        {
                                          type: object,
                                          nullable: false,
                                          properties:
                                            {
                                              height: { type: integer, nullable: false },
                                              depth: { type: integer, nullable: false },
                                              width: { type: integer, nullable: false },
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
          tags: {},
          summary: '',
          description: '',
          responses: { 200: { description: '' } },
        },
    }
  /api/internal/api/parcel/cancel:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties:
                            {
                              consignor_id: { type: integer, nullable: false },
                              parcel_reference_code: { type: string, nullable: false },
                            },
                        },
                    },
                },
            },
          tags: {},
          summary: '',
          description: '',
          responses: { 200: { description: '' } },
        },
    }
  /api/internal/parcel/payable-price/update:
    {
      post:
        {
          requestBody:
            {
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          nullable: false,
                          properties:
                            {
                              parcel_reference_code: { type: string, nullable: false },
                              payable_price: { type: integer, nullable: false },
                            },
                          required: [payable_price],
                        },
                    },
                },
            },
          tags: {},
          summary: '',
          description: '',
          responses:
            {
              200:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              type: object,
                              nullable: false,
                              properties:
                                {
                                  parcel_code: { type: string, nullable: false },
                                  shipment_id: { type: string, nullable: false },
                                  parcel_reference_code: { type: string, nullable: false },
                                  no_shipment: { type: boolean, nullable: false },
                                  invalid_parent: { type: boolean, nullable: false },
                                  invalid_status: { type: boolean, nullable: false },
                                  newly_created_parcel_codes: { type: array, nullable: false, items: { type: string } },
                                  newly_cancelled_parcel_codes:
                                    { type: array, nullable: false, items: { type: string } },
                                },
                            },
                        },
                    },
                  description: '',
                },
            },
        },
    }
  api/example:
    {
      get:
        {
          parameters: [{ name: id, in: query, schema: { type: integer }, required: false }],
          tags: [Example],
          summary: '',
          description: '',
          responses:
            {
              200:
                {
                  content:
                    {
                      application/json:
                        {
                          schema:
                            {
                              type: object,
                              nullable: false,
                              properties:
                                {
                                  status_code: { type: integer, nullable: false },
                                  data:
                                    {
                                      type: object,
                                      nullable: false,
                                      properties: { result: { type: string, nullable: false } },
                                    },
                                },
                            },
                        },
                    },
                  description: '',
                },
            },
        },
    }
